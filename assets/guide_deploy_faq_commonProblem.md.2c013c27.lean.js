import{_ as e,o as l,c as o,S as i}from"./chunks/framework.2ada2e54.js";const u=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"guide/deploy/faq/commonProblem.md","filePath":"guide/deploy/faq/commonProblem.md","lastUpdated":1752828192000}'),t={name:"guide/deploy/faq/commonProblem.md"};function s(n,a,r,c,d,p){return l(),o("div",null,a[0]||(a[0]=[i(`<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><p>本章收录了用户在部署/使用过程中向我们提问较多的问题。</p><p>作者：<a href="https://github.com/XiaoYue-Kun" target="_blank" rel="noreferrer">晓月君</a><br> 修饰：<a href="https://github.com/vivien8261" target="_blank" rel="noreferrer">Chino酱</a></p><h2 id="我看不懂什么是克隆仓库-代码部署的指令会报错" tabindex="-1">我看不懂什么是克隆仓库/代码部署的指令会报错 <a class="header-anchor" href="#我看不懂什么是克隆仓库-代码部署的指令会报错" aria-label="Permalink to &quot;我看不懂什么是克隆仓库/代码部署的指令会报错&quot;">​</a></h2><ul><li>你是否在考虑使用可执行文件部署而不是代码部署？</li><li>请注意文档中提供的“使用可执行文件部署”与“使用代码部署”任选其一进行即可，执行完即可进入下一步骤，而不是两者都要进行。</li></ul><h2 id="使用可执行文件部署时-兔兔的窗口闪现了一下-出现了一小段时间又消失了-闪退" tabindex="-1">使用可执行文件部署时，兔兔的窗口闪现了一下/出现了一小段时间又消失了（闪退） <a class="header-anchor" href="#使用可执行文件部署时-兔兔的窗口闪现了一下-出现了一小段时间又消失了-闪退" aria-label="Permalink to &quot;使用可执行文件部署时，兔兔的窗口闪现了一下/出现了一小段时间又消失了（闪退）&quot;">​</a></h2><h3 id="git-未正确配置" tabindex="-1">git 未正确配置 <a class="header-anchor" href="#git-未正确配置" aria-label="Permalink to &quot;git 未正确配置&quot;">​</a></h3><p>请使用组合键 <code>win+R</code> 输入 <code>cmd</code> 后回车，在跳出来的黑色框框中输入 <code>git</code> 后回车，如果显示</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">&#39;git&#39;不是内部或外部命令，也不是可运行的程序或批处理文件。</span></span></code></pre></div><p>通常情况下，这是 git 未正确安装导致的，可能是由于<strong>你没有认真看文档</strong>根本没有安装 git 所导致。请根据文档<a href="/guide/deploy/getStarted/index.html#安装-git">安装 git</a></p><p>安装完成后，再次重复上述操作，此时应该会显示如下的文本，这就证明你配置好了 git，可以再次尝试打开可执行文件了。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">usage: git [-v | --version] [-h | --help] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span></span>
<span class="line"><span style="color:#babed8;">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span></span>
<span class="line"><span style="color:#babed8;">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span></span>
<span class="line"><span style="color:#babed8;">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span></span>
<span class="line"><span style="color:#babed8;">           [--super-prefix=&lt;path&gt;] [--config-env=&lt;name&gt;=&lt;envvar&gt;]</span></span>
<span class="line"><span style="color:#babed8;">           &lt;command&gt; [&lt;args&gt;]</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">These are common Git commands used in various situations:</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">start a working area (see also: git help tutorial)</span></span>
<span class="line"><span style="color:#babed8;">   clone     Clone a repository into a new directory</span></span>
<span class="line"><span style="color:#babed8;">   init      Create an empty Git repository or reinitialize an existing one</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">work on the current change (see also: git help everyday)</span></span>
<span class="line"><span style="color:#babed8;">   add       Add file contents to the index</span></span>
<span class="line"><span style="color:#babed8;">   mv        Move or rename a file, a directory, or a symlink</span></span>
<span class="line"><span style="color:#babed8;">   restore   Restore working tree files</span></span>
<span class="line"><span style="color:#babed8;">   rm        Remove files from the working tree and from the index</span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">...</span></span></code></pre></div><blockquote><p>我很确定我已经安装了git，但是我在黑框内输入git后还是会显示“不是内部或外部命令”</p></blockquote><p>这个现象大概率是因为设备的环境变量没有配置好导致的，请参考 <a href="https://blog.csdn.net/ZSQ717/article/details/123095769" target="_blank" rel="noreferrer">此文章</a> 尝试将 git 的路径添加入环境变量中再次尝试开头的操作。</p><h3 id="资源包没能完成下载" tabindex="-1">资源包没能完成下载 <a class="header-anchor" href="#资源包没能完成下载" aria-label="Permalink to &quot;资源包没能完成下载&quot;">​</a></h3><blockquote><p>我在窗口最上方看到了一些进度条，可是没能跑完就闪退了</p></blockquote><ul><li>请检查你的网络连接或是否开启了代理软件。</li><li>若你有意或无意地导致了 <code>resource/gamedata</code> 文件夹内的内容产生了变动，可能导致无法更新。直接删除整个 <code>resource/gamedata</code> 文件夹重新启动程序即可</li></ul><h2 id="启动时弹窗提示-无法定位程序输入点" tabindex="-1">启动时弹窗提示“无法定位程序输入点...” <a class="header-anchor" href="#启动时弹窗提示-无法定位程序输入点" aria-label="Permalink to &quot;启动时弹窗提示“无法定位程序输入点...”&quot;">​</a></h2><ul><li>你是否在使用 win7 或较老的 WindowsServer 版本？</li><li>就结论而言 win7 或较老的 WindowsServer 版本无法运行兔兔 原因是 node 版本不兼容 推荐升级 win10（若情况允许）或者使用云服务器部署/更换云服务器镜像</li></ul><h2 id="无法进入控制台" tabindex="-1">无法进入控制台 <a class="header-anchor" href="#无法进入控制台" aria-label="Permalink to &quot;无法进入控制台&quot;">​</a></h2><blockquote><p>我尝试进入控制台时出现了 <code>ERR_NETWORK 服务器异常</code></p></blockquote><ul><li><p>检查浏览器顶端的地址栏 通常，地址栏中协议(也就是网址最开头的http/https)应该使用http 如果你的网址以https开头，请改为http后再重新尝试访问</p></li><li><p>部分内核的浏览器可能会拦截公网对私网不安全的访问请求</p><ul><li>打开 tab 页面 <code>chrome://flags/#block-insecure-private-network-requests</code></li><li>将 <code>Block insecure private network requests</code> 设置为 <code>Disabled</code>, 然后重启 <img src="https://s1.ax1x.com/2022/11/18/zukVk6.png" alt="zukVk6.png"></li></ul></li><li><p>若你访问控制台的设备与运行兔兔的设备不是同一台设备 你需要修改兔兔本体的一些设置</p><ul><li>前往兔兔的<code>config/server.yaml</code></li><li>将<code>host</code>的值修改为<code>0.0.0.0</code></li><li>重新启动兔兔</li></ul></li></ul><blockquote><p>我不知道服务地址应该填什么</p></blockquote><ul><li>如果你访问控制台的设备与部署兔兔的设备为同一台的话，通常你应该填写的就是<code>http://127.0.0.1:8088</code>，而服务密钥留空</li><li>如果你访问控制台的设备与部署兔兔的设备不是同一台，但是在同一个局域网内（通常指在同一个家里） <ul><li>参照<a href="/guide/deploy/console/index.html#公网-局域网访问">文档</a>将 <code>host</code> 修改为 <code>0.0.0.0</code></li><li>参考<a href="https://jingyan.baidu.com/article/ad310e80fd60c65949f49e9f.html" target="_blank" rel="noreferrer">此文章</a>查询你部署兔兔的设备的局域网ip（通常是以 192 开头的一串数字）</li><li>控制台中应填写 <code>http://[你查询到的ip]:8088</code></li><li>而服务密钥留空</li></ul></li><li>如果你将兔兔部署在云服务器上，在另一台设备上访问控制台，那么事情将会变得有些棘手，首先你需要参照上面的指示将 <code>host</code> 修改为 <code>0.0.0.0</code>，其次你需要给云服务器运营商的防火墙设置一个入站规则（关于如何做到这一点,请自行百度），通常端口是 8088，协议为tcp，并且操作系统内也需要设置入站规则（也请自行百度） <ul><li>提示：通过公网访问，可能有设备被攻击的风险，请自行配置服务密钥（在 <code>config/server.yaml</code> 中修改 <code>authKey</code> 的值并填入控制台的服务密钥中）。更进一步，推荐使用Nginx反代服务提供更高的安全性，请参考<a href="/guide/deploy/console/index.html#公网-局域网访问">文档</a></li></ul></li></ul><h2 id="控制台中实例无法连接" tabindex="-1">控制台中实例无法连接 <a class="header-anchor" href="#控制台中实例无法连接" aria-label="Permalink to &quot;控制台中实例无法连接&quot;">​</a></h2><p>由于作者仅涉足过mirai，本处仅将提供mirai相关问题的解决思路，不过部分解决思路也可用在gocq中</p><p>我们先来对配置单的具体内容进行一些解释</p><ul><li>APP ID：mirai登陆的qq号，也就是你bot的qq号</li><li>TOKEN：对mirai来说，为<code>mirai/config/net.mamoe.mirai-api-http/settings.yml</code>中<code>verifyKey</code>的值</li><li>适配器类型：通常你<strong>应该</strong>选择<code>CQ-Http</code>或是<code>Mirai-api-http</code><strong>而不是</strong><code>QQ-Bot</code></li><li>可控实例：是否将一些运行信息发送至特定群组 （若是勾选了，控制台群组id应为你希望运行信息出现在的群聊的群聊号中）</li><li>Host地址：如提示所示，如果是同一台设备的话 填写127.0.0.1</li><li>HTTP端口：<code>mirai/config/net.mamoe.mirai-api-http/settings.yml</code>中<code>http</code>下<code>port</code>的值</li><li>WS端口：<code>mirai/config/net.mamoe.mirai-api-http/settings.yml</code>中<code>ws</code>下<code>port</code>的值 (如果你参考的是初心佬的文章，那这两项应该分别为<code>8080</code>和<code>8060</code>)</li></ul><p>以下是兔兔的窗口中可能出现的报错信息以及相应处理方法</p><h3 id="指定bot不存在" tabindex="-1">指定bot不存在 <a class="header-anchor" href="#指定bot不存在" aria-label="Permalink to &quot;指定bot不存在&quot;">​</a></h3><p>请检查mirai是否正确登陆了bot的qq</p><h3 id="auth-key错误" tabindex="-1">Auth Key错误 <a class="header-anchor" href="#auth-key错误" aria-label="Permalink to &quot;Auth Key错误&quot;">​</a></h3><p>rt，检查mirai本体配置中authKey的值与控制台填写的是否一致</p><h3 id="cannot-connect-to-mirai-api-http-websocket-server" tabindex="-1">Cannot connect to mirai-api-http websocket server <a class="header-anchor" href="#cannot-connect-to-mirai-api-http-websocket-server" aria-label="Permalink to &quot;Cannot connect to mirai-api-http websocket server&quot;">​</a></h3><ul><li>检查mirai是否启动</li><li>检查mirai-api-http中host地址与两个端口填写是否有误</li><li>常见错误为<strong>看错</strong>并填写错端口（如8080与8060看混 或者修改了mah的配置却未更改控制台实例配置单）</li></ul><h3 id="got-code-401" tabindex="-1">Got code 401 <a class="header-anchor" href="#got-code-401" aria-label="Permalink to &quot;Got code 401&quot;">​</a></h3><p>适配器类型<strong>应该是</strong><code>Mirai-api-http</code>或者<code>CQ-Http</code><strong>而不是</strong><code>QQ-Bot</code></p><h3 id="无效参数" tabindex="-1">无效参数 <a class="header-anchor" href="#无效参数" aria-label="Permalink to &quot;无效参数&quot;">​</a></h3><p>实例配置单中的qq号是否填写错误了</p><h2 id="mcl无法正常启动" tabindex="-1">mcl无法正常启动 <a class="header-anchor" href="#mcl无法正常启动" aria-label="Permalink to &quot;mcl无法正常启动&quot;">​</a></h2><p><strong>温馨提示：对mcl一切配置文件的更改都应该在mcl不在运行的情况下进行</strong></p><h3 id="系统找不到指定的路径" tabindex="-1">系统找不到指定的路径 <a class="header-anchor" href="#系统找不到指定的路径" aria-label="Permalink to &quot;系统找不到指定的路径&quot;">​</a></h3><ul><li>mcl处于的路径中不能有任何中文字符（包括汉字与中文标点）</li><li>请将mcl-installer转移至一个没有中文字符的路径下重新安装</li></ul><blockquote><p>我很确定我的路径中没有中文字符</p></blockquote><ul><li>你是否人为移动了（有意或无意）mcl所处文件夹或者其子文件夹？</li><li>对小白来说，如果你想移动mirai，最好的方法其实是将mcl-installer移动到别处重新安装 并将原来的config以及plugins文件夹移动到新安装的mirai中<strong>覆盖</strong></li></ul><h3 id="当前qq版本太低" tabindex="-1">当前qq版本太低 <a class="header-anchor" href="#当前qq版本太低" aria-label="Permalink to &quot;当前qq版本太低&quot;">​</a></h3><ul><li>升级mcl本体</li><li>将协议换为IPAD 前往<code>config/Console/AutoLogin.yml</code> 将<code>protocol</code>更改为<code>IPAD</code></li><li>删除<code>bots</code>文件夹下所有内容</li></ul><h3 id="登录存在安全风险" tabindex="-1">登录存在安全风险 <a class="header-anchor" href="#登录存在安全风险" aria-label="Permalink to &quot;登录存在安全风险&quot;">​</a></h3><ul><li>这个东西吧...挺玄学的，通常是云服务器上部署的mirai才会有这个问题，要通过这个验证，通常需要手机与电脑在同一网络环境下，而如果你使用了云服务器，那么除了使用一些玄学手段（指过两天再试就好了）或者科学手段（这玩意儿可不兴展开来讲啊 哥）外别无他法。</li></ul><h3 id="苹果手机无法安装滑块助手" tabindex="-1">苹果手机无法安装滑块助手 <a class="header-anchor" href="#苹果手机无法安装滑块助手" aria-label="Permalink to &quot;苹果手机无法安装滑块助手&quot;">​</a></h3><ul><li>在<a href="https://www.initbili.top/2022/8d92a2feb3e2/" target="_blank" rel="noreferrer">初心佬的文章</a>最下方有手动获取ticket的教程</li><li>注意，此时你不需要再点击<code>Open with TxCaptchaHelper</code>按钮了，而是直接将教程中获取到的ticket填入ticket栏中即可</li></ul><h3 id="a-jni-error-has-occured" tabindex="-1">A JNI error has occured. <a class="header-anchor" href="#a-jni-error-has-occured" aria-label="Permalink to &quot;A JNI error has occured.&quot;">​</a></h3><ul><li>通常这是由于java版本太低导致的</li><li>两个解决方案 <ol><li>可以手动安装一个java的jdk（建议版本为17或18 安装方法请自行百度）</li><li>使用mcl installer重新安装mcl 在安装时会询问是否安装java jdk 选择安装即可</li></ol></li></ul><h3 id="有大段看不懂-完全没有中文信息的红色报错" tabindex="-1">有大段看不懂/完全没有中文信息的红色报错 <a class="header-anchor" href="#有大段看不懂-完全没有中文信息的红色报错" aria-label="Permalink to &quot;有大段看不懂/完全没有中文信息的红色报错&quot;">​</a></h3><ul><li>通常，这类报错的关键信息都在红色文本的最下方或者最上方</li><li>如果最下方没有中文的提示，那么请前往红色文本的最上方查找关键信息</li></ul><h4 id="address-already-in-use" tabindex="-1">Address already in use <a class="header-anchor" href="#address-already-in-use" aria-label="Permalink to &quot;Address already in use&quot;">​</a></h4><ul><li>你是否启动了两个mcl？ 如果是的话，请关闭一个，并保证同时只有一个mcl在运行</li><li>mah中所填写的的端口与某个外部应用冲突，可以修改<code>config/net.mamoe.mirai-api-http/setting.yml</code> 中两个端口的值解决，值理论上可以是1024～65535中的任何一个数字</li></ul><div class="danger custom-block"><p class="custom-block-title">注意<br></p><p>若是在此处修改了端口值，你应该在控制台中填写实例配置单时相对应地修改端口值</p></div><h2 id="代码部署启动时-使用特定命令时会报错" tabindex="-1">代码部署启动时/使用特定命令时会报错 <a class="header-anchor" href="#代码部署启动时-使用特定命令时会报错" aria-label="Permalink to &quot;代码部署启动时/使用特定命令时会报错&quot;">​</a></h2><p>既然你是代码部署的，一些常见的细节我将会省略不解释，希望你能看懂</p><ul><li>请更新代码 &amp; 依赖 &amp; 插件<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pull</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--upgrade</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">amiyabot</span></span></code></pre></div></li></ul><h2 id="可执行文件部署启动时会报错" tabindex="-1">可执行文件部署启动时会报错 <a class="header-anchor" href="#可执行文件部署启动时会报错" aria-label="Permalink to &quot;可执行文件部署启动时会报错&quot;">​</a></h2><ul><li>你是否更新了插件？ <s>我通常称这种行为叫旧瓶装新酒</s></li><li>请检查<a href="https://www.amiyabot.com/guide/deploy/getStarted.html" target="_blank" rel="noreferrer">项目官网</a>是否有更新的版本</li><li>如果是的话，请更新兔兔版本后再试</li></ul><h2 id="部署过程看起来一切都很正常-但兔兔就是不理人" tabindex="-1">部署过程看起来一切都很正常，但兔兔就是不理人 <a class="header-anchor" href="#部署过程看起来一切都很正常-但兔兔就是不理人" aria-label="Permalink to &quot;部署过程看起来一切都很正常，但兔兔就是不理人&quot;">​</a></h2><ul><li>检查是否有安装插件，v6的插件化使得默认部署完的兔兔是没有插件的 也就无法对常见的互动进行回应</li></ul><blockquote><p>我已经安装好插件了</p></blockquote><ul><li>查看mirai窗口，检查是否有消息推送的提示，如果没有，则是mirai启动/配置有问题，导致mirai这一步就收不到消息，请检查mirai的启动情况与配置文件，并配合前文的排错食用</li><li>查看兔兔窗口 是否有消息推送 <s>通常 有的话还不回应就见鬼了</s><ul><li>检查报错，是否未正确连接到mirai</li></ul></li></ul><div class="danger custom-block"><p class="custom-block-title">划重点<br></p><p>windows的cmd存在 单击窗体内黑色部分进入快速选择 这么一个机制 标志是窗口标题最前面出现了<code>选择</code>二字 而进入了快速选择 应用本体的运行将会被冻结 产生应用卡住不动的表象 这种情况下 只要敲击回车就可以推出快速选择 这一点对mirai和兔兔两者都适用</p></div><h2 id="更新兔兔-迁移兔兔时-如何保留原来的数据" tabindex="-1">更新兔兔/迁移兔兔时，如何保留原来的数据 <a class="header-anchor" href="#更新兔兔-迁移兔兔时-如何保留原来的数据" aria-label="Permalink to &quot;更新兔兔/迁移兔兔时，如何保留原来的数据&quot;">​</a></h2><ul><li>将旧兔兔的 database 整个覆盖至新兔兔的根目录下即可</li><li>对于可执行文件部署，也可以选择用新的可执行文件覆盖旧的可执行文件，便可以不用迁移数据库文件，但请注意，有时这会导致插件与本体版本不一致的问题，通常使用上一个方案，并重新安装插件即可解决</li></ul>`,70)]))}const m=e(t,[["render",s]]);export{u as __pageData,m as default};
