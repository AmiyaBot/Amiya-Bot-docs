import{_ as a,o as n,c as l,S as p}from"./chunks/framework.2ada2e54.js";const F=JSON.parse('{"title":"创建插件","description":"","frontmatter":{},"headers":[],"relativePath":"develop/plugin/create.md","filePath":"develop/plugin/create.md","lastUpdated":1752828192000}'),o={name:"develop/plugin/create.md"};function e(t,s,c,r,i,y){return n(),l("div",null,s[0]||(s[0]=[p(`<h1 id="创建插件" tabindex="-1">创建插件 <a class="header-anchor" href="#创建插件" aria-label="Permalink to &quot;创建插件&quot;">​</a></h1><p>在 pluginsDev 目录内，创建一个 Python package 形式的模块。为了防止加载插件时的<strong>全局环境变量污染</strong>。你的业务逻辑必须在另一个入口文件内进行。</p><p>创建入口文件 <code>main.py</code></p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#babed8;">Amiya-Bot</span></span>
<span class="line"><span style="color:#babed8;">├── pluginsDev</span></span>
<span class="line highlighted"><span style="color:#babed8;">│   ├── myPlugin</span></span>
<span class="line highlighted"><span style="color:#babed8;">│   │   ├── __init__.py</span></span>
<span class="line highlighted"><span style="color:#babed8;">│   │   └── main.py</span></span>
<span class="line"><span style="color:#babed8;">│   ...</span></span>
<span class="line"><span style="color:#babed8;">...</span></span></code></pre></div><h2 id="编写插件程序" tabindex="-1">编写插件程序 <a class="header-anchor" href="#编写插件程序" aria-label="Permalink to &quot;编写插件程序&quot;">​</a></h2><p>在 <code>main.py</code> 内编写插件的注册程序</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> PluginInstance</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bot </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">PluginInstance</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">我的插件</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">plugin_id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">my-plugin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#BABED8;font-style:italic;">description</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">我的第一个插件</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span></code></pre></div><p><code>PluginInstance</code> 对象继承了工厂类 <code>BotHandlerFactory</code>，这意味着你完全可以按照 <a href="/develop/basic/messageHandler.html">开发指南</a> 去编写你的插件功能。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on_message</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">keywords</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Message</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Chain</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">text</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;hello, </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">nickname</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on_event</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">GUILD_CREATE</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">event</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Event</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">instance</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> BotAdapterProtocol</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span></code></pre></div><p>这些消息响应器都会在插件被加载时注册到主体程序中。</p><h2 id="插件内静态资源的使用" tabindex="-1">插件内静态资源的使用 <a class="header-anchor" href="#插件内静态资源的使用" aria-label="Permalink to &quot;插件内静态资源的使用&quot;">​</a></h2><p>如果你的插件包含静态资源，在读取它们时，应该以插件的绝对目录读取。</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#babed8;">Amiya-Bot</span></span>
<span class="line"><span style="color:#babed8;">├── pluginsDev</span></span>
<span class="line"><span style="color:#babed8;">│   ├── myPlugin</span></span>
<span class="line"><span style="color:#babed8;">│   │   ├── __init__.py</span></span>
<span class="line"><span style="color:#babed8;">│   │   ├── main.py</span></span>
<span class="line highlighted"><span style="color:#babed8;">│   │   └── file.txt</span></span>
<span class="line"><span style="color:#babed8;">│   ...</span></span>
<span class="line"><span style="color:#babed8;">...</span></span></code></pre></div><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># main.py</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">plugin_dir </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> os</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dirname</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">__file__</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#BABED8;">file </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">open</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&#39;</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">plugin_dir</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">/file.txt&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="导出插件的实例" tabindex="-1">导出插件的实例 <a class="header-anchor" href="#导出插件的实例" aria-label="Permalink to &quot;导出插件的实例&quot;">​</a></h2><p>在 <code>__init__.py</code> 内导出插件的入口，命名为 <span style="color:red;">bot</span>。这个命名是固定的，即使 main 内部的 PluginInstance 实例变量名不为 bot，在导出时都必须使用 <code>as bot</code> 重命名。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">main </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> bot</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">注意<br></p><p>请不要在 <code>__init__.py</code> 内编写多余的代码，我们希望这个文件有且只有上面的一行。插件在加载时，会临时添加插件目录为系统路径，这会使主模块的一些全局一等对象污染主体程序，导致不可预测的后果。</p></div>`,18)]))}const d=a(o,[["render",e]]);export{F as __pageData,d as default};
