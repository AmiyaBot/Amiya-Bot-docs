import{_ as t,o as a,c as n,S as e}from"./chunks/framework.2ada2e54.js";const h=JSON.parse('{"title":"事件总线","description":"","frontmatter":{},"headers":[],"relativePath":"develop/advanced/eventBus.md","filePath":"develop/advanced/eventBus.md","lastUpdated":1752828192000}'),l={name:"develop/advanced/eventBus.md"};function o(p,s,r,c,d,y){return a(),n("div",null,s[0]||(s[0]=[e(`<h1 id="事件总线" tabindex="-1">事件总线 <a class="header-anchor" href="#事件总线" aria-label="Permalink to &quot;事件总线&quot;">​</a></h1><p>AmiyaBot 提供了简易的全局事件总线的方法</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> event_bus</span></span></code></pre></div><h2 id="发布事件" tabindex="-1">发布事件 <a class="header-anchor" href="#发布事件" aria-label="Permalink to &quot;发布事件&quot;">​</a></h2><p><strong>publish</strong></p><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>event_name</td><td>str</td><td>事件名</td><td></td></tr><tr><td>data</td><td>Any</td><td>事件数据</td><td>None</td></tr></tbody></table><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">event_bus</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">publish</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myEvent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">...</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="订阅事件" tabindex="-1">订阅事件 <a class="header-anchor" href="#订阅事件" aria-label="Permalink to &quot;订阅事件&quot;">​</a></h2><p><strong>subscribe</strong></p><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>event_name</td><td>str</td><td>事件名</td><td></td></tr><tr><td>method</td><td>Callable</td><td>响应方法（可选）</td><td>None</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">提示<br></p><p>响应方法同时支持<strong>异步</strong>和<strong>同步</strong>函数</p></div><p>通过装饰器订阅事件</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">event_bus</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myEvent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">event_handler</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span></code></pre></div><p>也可以通过传入响应函数订阅事件</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">event_handler</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">event_bus</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myEvent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> event_handler</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h2 id="取消订阅" tabindex="-1">取消订阅 <a class="header-anchor" href="#取消订阅" aria-label="Permalink to &quot;取消订阅&quot;">​</a></h2><p>取消订阅需要传入<strong>订阅时的响应方法对象</strong>（且需要保证其内存地址是一致的）</p><p><strong>unsubscribe</strong></p><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>event_name</td><td>str</td><td>事件名</td><td></td></tr><tr><td>method</td><td>Callable</td><td>响应方法</td><td>None</td></tr></tbody></table><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">event_bus</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unsubscribe</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myEvent</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> event_handler</span><span style="color:#89DDFF;">)</span></span></code></pre></div>`,20)]))}const F=t(l,[["render",o]]);export{h as __pageData,F as default};
