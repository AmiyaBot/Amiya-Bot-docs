import{_ as s,o as n,c as o,S as t}from"./chunks/framework.2ada2e54.js";const D=JSON.parse('{"title":"Markdown 生成的图片","description":"","frontmatter":{},"headers":[],"relativePath":"develop/basic/chainBuild/markdown.md","filePath":"develop/basic/chainBuild/markdown.md","lastUpdated":1752828192000}'),l={name:"develop/basic/chainBuild/markdown.md"};function e(p,a,r,c,d,i){return n(),o("div",null,a[0]||(a[0]=[t(`<h1 id="markdown-生成的图片" tabindex="-1">Markdown 生成的图片 <a class="header-anchor" href="#markdown-生成的图片" aria-label="Permalink to &quot;Markdown 生成的图片&quot;">​</a></h1><p>添加一张由 Markdown 文本渲染的图片，直接传入 md 格式的文本，使用 HTML 模式渲染。建议先阅读 <a href="/develop/basic/chainBuild/html.html">发送 html 生成的图片</a> 了解如何启动 Chromium。</p><div class="danger custom-block"><p class="custom-block-title">注意<br></p><p>这并非 QQ 机器人官方提供的 <a href="https://bot.q.qq.com/wiki/develop/api/openapi/message/post_markdown_messages.html" target="_blank" rel="noreferrer">发送 markdown 消息</a> ，要发送官方的 Markdown 模版消息请查看 <a href="/develop/basic/chainBuild/mdTemplate.html">Markdown 模版</a>。</p></div><h2 id="chain-markdown" tabindex="-1">Chain().markdown() <a class="header-anchor" href="#chain-markdown" aria-label="Permalink to &quot;Chain().markdown()&quot;">​</a></h2><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>content</td><td>str</td><td>markdown 文本</td><td></td></tr><tr><td>render_time</td><td>int</td><td>渲染时间（毫秒）</td><td>200</td></tr><tr><td>is_dark</td><td>bool</td><td>是否使用暗黑样式</td><td>False</td></tr></tbody></table><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Chain</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">markdown</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">text</span><span style="color:#89DDFF;">)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">提示 <br></p><p>文本量大时，渲染将会耗费较长时间，默认预留200ms的渲染时间。可通过参数 <code>render_time</code> 设置需要的时间。</p></div><h2 id="更换渲染-markdown-的-html-文件" tabindex="-1">更换渲染 Markdown 的 HTML 文件 <a class="header-anchor" href="#更换渲染-markdown-的-html-文件" aria-label="Permalink to &quot;更换渲染 Markdown 的 HTML 文件&quot;">​</a></h2><p>更改全局配置可以使用自己的 HTML 文件渲染 Markdown</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">builtin</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">messageChain </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> ChainConfig</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">ChainConfig</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">md_template</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./myMarkdown.html</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">ChainConfig</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">md_template_dark</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./myDarkMarkdown.html</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>HTML 内需要实现以下方法获取到 Markdown 文本</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">markdownText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">data</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,12)]))}const m=s(l,[["render",e]]);export{D as __pageData,m as default};
