import{_ as a,o as l,c as n,S as t}from"./chunks/framework.2ada2e54.js";const o="/assets/hello7.8e9afac1.png",p="/assets/awesome1.7d49a140.png",h=JSON.parse('{"title":"HTML 生成的图片","description":"","frontmatter":{},"headers":[],"relativePath":"develop/basic/chainBuild/html.md","filePath":"develop/basic/chainBuild/html.md","lastUpdated":1752828192000}'),e={name:"develop/basic/chainBuild/html.md"};function c(r,s,i,y,F,D){return l(),n("div",null,s[0]||(s[0]=[t(`<h1 id="html-生成的图片" tabindex="-1">HTML 生成的图片 <a class="header-anchor" href="#html-生成的图片" aria-label="Permalink to &quot;HTML 生成的图片&quot;">​</a></h1><p>发送一张使用 html 页面生成的图片，在同等工作量下，它通常比使用 PIL 合成的图片更加生动，技术难度也比 PIL 要低得多。</p><div class="danger custom-block"><p class="custom-block-title">操作系统支持<br></p><p>HTML制图需要使用 playwright 模块，所以仅支持以下操作系统：</p><ul><li>Windows 10、Windows Subsystem for Linux (WSL) 或 Windows Server 2012 及以上系统</li><li>MacOS 11 (Big Sur) 及以上系统</li><li>Linux 系统官方支持 Debian 11、Ubuntu 18.04 以及 Ubuntu 20.04</li></ul></div><h2 id="安装-chromium" tabindex="-1">安装 Chromium <a class="header-anchor" href="#安装-chromium" aria-label="Permalink to &quot;安装 Chromium&quot;">​</a></h2><p>命令行执行以下命令安装 Chromium 内核：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Windows or MacOS</span></span>
<span class="line"><span style="color:#FFCB6B;">playwright</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">chromium</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Linux</span></span>
<span class="line"><span style="color:#FFCB6B;">playwright</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--with-deps</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">chromium</span></span></code></pre></div><h2 id="启动时打开-chromium" tabindex="-1">启动时打开 Chromium <a class="header-anchor" href="#启动时打开-chromium" aria-label="Permalink to &quot;启动时打开 Chromium&quot;">​</a></h2><p>在 bot（包括<a href="/develop/basic/multipleAccounts.html#创建一个多账号实例">多账号实例</a>）启动的 start 方法内设置参数 <code>launch_browser=True</code></p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">launch_browser</span><span style="color:#89DDFF;">=True)</span></span></code></pre></div><p>进阶使用：<a href="/develop/advanced/playwright.html">改变默认的 Playwright 启动行为</a></p><h2 id="chain-html" tabindex="-1">Chain().html() <a class="header-anchor" href="#chain-html" aria-label="Permalink to &quot;Chain().html()&quot;">​</a></h2><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>path</td><td>str</td><td>模板文件路径或网站URL</td><td></td></tr><tr><td>data</td><td>Any</td><td>传入模板文件的数据（数据可被 json 序列化）</td><td></td></tr><tr><td>width</td><td>int</td><td>浏览器视窗宽度</td><td>1280</td></tr><tr><td>height</td><td>int</td><td>浏览器视窗高度</td><td>720</td></tr><tr><td>is_template</td><td>bool</td><td>是否为模板文件</td><td>True</td></tr><tr><td>render_time</td><td>int</td><td>渲染时间（毫秒）</td><td>200</td></tr></tbody></table><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">Chain</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">html</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">template.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#82AAFF;">...</span><span style="color:#89DDFF;">})</span></span></code></pre></div><h2 id="创建html模板文件" tabindex="-1"><strong>创建html模板文件</strong> <a class="header-anchor" href="#创建html模板文件" aria-label="Permalink to &quot;**创建html模板文件**&quot;">​</a></h2><p>创建文件 hello.html 并定义全局的 init 方法。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- hello.html --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 必须定义全局的 init 方法，接收一个 data 参数</span></span>
<span class="line"><span style="color:#BABED8;">    window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#content</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">innerText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">username</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>将需要渲染的数据传入模板：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on_message</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">keywords</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Message</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Chain</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">html</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> data</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">nickname</span><span style="color:#89DDFF;">})</span></span></code></pre></div><p>示例在触发会话并开始发送消息时，Chain 对象将会调用 Chromium 无头浏览器，渲染 <code>hello.html</code> 并在页面内执行 JavaScript 语句 <code>init({&#39;username&#39;: &#39;vivien8261&#39;})</code>。<br> 渲染结束后，无头浏览器截图生成图片，然后执行常规的图片发送方法。</p><img src="`+o+'" alt="image"><p><em>发挥你的想象，写出更美观的页面！</em></p><details class="details custom-block"><summary>兔兔-v6 效果<br></summary><img src="'+p+`" alt="image"></details><h2 id="通过网站url制图" tabindex="-1"><strong>通过网站URL制图</strong> <a class="header-anchor" href="#通过网站url制图" aria-label="Permalink to &quot;**通过网站URL制图**&quot;">​</a></h2><p>支持直接使用网站URL生成图片。</p><div class="danger custom-block"><p class="custom-block-title">注意 <br></p><p>在页面加载完毕后，默认预留200ms的渲染时间。如果页面有部分元素是异步渲染的，将有可能不显示在图片内。可通过参数 <code>render_time</code> 设置需要的时间。</p></div><p>设置参数 <code>is_template=False</code></p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on_message</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">keywords</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Message</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Chain</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">html</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://www.baidu.com/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#82AAFF;">                            </span><span style="color:#BABED8;font-style:italic;">is_template</span><span style="color:#89DDFF;">=False,</span></span>
<span class="line"><span style="color:#82AAFF;">                            </span><span style="color:#BABED8;font-style:italic;">render_time</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">)</span></span></code></pre></div><p>触发会话时，渲染 <code>https://www.baidu.com/</code> 页面，并在等待 <code>1000ms</code> 后截图发送图片。</p>`,28)]))}const m=a(e,[["render",c]]);export{h as __pageData,m as default};
