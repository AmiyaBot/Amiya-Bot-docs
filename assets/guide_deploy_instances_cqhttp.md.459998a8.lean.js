import{_ as a,o as n,c as l,S as p}from"./chunks/framework.2ada2e54.js";const F=JSON.parse('{"title":"CQ-Http QQ群机器人","description":"","frontmatter":{},"headers":[],"relativePath":"guide/deploy/instances/cqhttp.md","filePath":"guide/deploy/instances/cqhttp.md","lastUpdated":1752828192000}'),t={name:"guide/deploy/instances/cqhttp.md"};function o(e,s,c,r,i,y){return n(),l("div",null,s[0]||(s[0]=[p(`<h1 id="cq-http-qq群机器人" tabindex="-1">CQ-Http QQ群机器人 <a class="header-anchor" href="#cq-http-qq群机器人" aria-label="Permalink to &quot;CQ-Http QQ群机器人&quot;">​</a></h1><p><code>APP ID</code> 为登录在 go-cqhttp 的 <strong>QQ 号</strong>。<br><code>TOKEN</code> 填写配置的 access-token，没有配置则不需要填写。<br><code>CQ-Http 配置</code> 请准确填写你部署 go-cqhttp 时的信息。</p><p>需要配置 go-cqhttp 目录下的文件 <code>config.yml</code> 里数据类型为 array，修改完后重启 go-cqhttp 生效。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 上报数据类型</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 可选: string,array</span></span>
<span class="line highlighted"><span style="color:#BABED8;">    </span><span style="color:#F07178;">post-format</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">array</span></span></code></pre></div><p>access-token 可在 go-cqhttp 目录下的文件 <code>config.yml</code> 找到</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 默认中间件锚点</span></span>
<span class="line"><span style="color:#F07178;">default-middlewares</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">&amp;</span><span style="color:#FFCB6B;">default</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 访问密钥, 强烈推荐在公网的服务器设置</span></span>
<span class="line highlighted"><span style="color:#BABED8;">    </span><span style="color:#F07178;">access-token</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*******</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 事件过滤器文件目录</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># API限速设置</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 该设置为全局生效</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 目前该限速设置为令牌桶算法, 请参考:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">rate-limit</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">enabled</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;"># 是否启用限速</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">frequency</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 令牌回复频率, 单位秒</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#F07178;">bucket</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">     </span><span style="color:#676E95;font-style:italic;"># 令牌桶大小</span></span></code></pre></div>`,6)]))}const d=a(t,[["render",o]]);export{F as __pageData,d as default};
