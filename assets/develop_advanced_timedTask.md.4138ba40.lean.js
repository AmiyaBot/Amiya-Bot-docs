import{_ as a,o as n,c as l,S as t}from"./chunks/framework.2ada2e54.js";const i=JSON.parse('{"title":"定时任务","description":"","frontmatter":{},"headers":[],"relativePath":"develop/advanced/timedTask.md","filePath":"develop/advanced/timedTask.md","lastUpdated":1752828192000}'),o={name:"develop/advanced/timedTask.md"};function p(e,s,c,r,y,D){return n(),l("div",null,s[0]||(s[0]=[t(`<h1 id="定时任务" tabindex="-1">定时任务 <a class="header-anchor" href="#定时任务" aria-label="Permalink to &quot;定时任务&quot;">​</a></h1><p>AmiyaBot 提供了全局定时任务管理器，基于 <a href="https://github.com/agronholm/apscheduler" target="_blank" rel="noreferrer">apscheduler</a>。</p><div class="warning custom-block"><p class="custom-block-title">⚠️注意⚠️不兼容的更新<br></p><p>在版本 1.6.9 开始，不再支持全局定义定时任务，以及移除了 custom 参数，使用更泛用的 apscheduler trigger 控制任务执行时机。</p><p>此方法已不再支持，全局变量 tasks_control 已删除。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> AmiyaBot</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> tasks_control</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">tasks_control</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timed_task</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">each</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">120</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">():</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span></code></pre></div><p>bot.timed_task 装饰器的 custom 参数已删除。</p><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>each</td><td>int</td><td>循环执行间隔时间，单位（秒）</td><td></td></tr><tr><td><s>custom</s></td><td><s>Callable</s></td><td><s>自定义循环规则</s></td><td></td></tr><tr><td>sub_tag</td><td>str</td><td>子标签</td><td>default_tag</td></tr></tbody></table></div><h2 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">​</a></h2><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> AmiyaBot</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">factory </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> BotHandlerFactory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bot </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">AmiyaBot</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">...</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;"># 或 MultipleAccounts / PluginInstance 对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 每 60 秒执行一次任务</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timed_task</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">each</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">instance</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> BotHandlerFactory</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span></code></pre></div><h2 id="插件开发" tabindex="-1">插件开发 <a class="header-anchor" href="#插件开发" aria-label="Permalink to &quot;插件开发&quot;">​</a></h2><p>如果你正在开发插件，并且你不希望在插件的卸载方法里手动取消定时任务，请务必通过 <code>PluginInstance.timed_task</code> 定义任务。</p><p>通过 <code>PluginInstance.timed_task</code> 定义的任务可以在插件被卸载时自动取消。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> PluginInstance</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">factory </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> BotHandlerFactory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bot </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">PluginInstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">...</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timed_task</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">each</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">instance</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> BotHandlerFactory</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span></code></pre></div><p>插件开发详情请查看 <a href="/develop/plugin/">插件开发文档</a>。</p><h2 id="timed-task-装饰器" tabindex="-1">timed_task 装饰器 <a class="header-anchor" href="#timed-task-装饰器" aria-label="Permalink to &quot;timed_task 装饰器&quot;">​</a></h2><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>each</td><td>int</td><td>循环执行间隔时间，单位（秒），如果使用其他触发方式，请使用 kwargs 形式的 scheduler.add_job 参数</td><td>None</td></tr><tr><td>sub_tag</td><td>str</td><td>子标签</td><td>default_tag</td></tr><tr><td>run_when_added</td><td>bool</td><td>添加时立即执行一次任务</td><td>default_tag</td></tr><tr><td>**kwargs</td><td></td><td><a href="https://github.com/agronholm/apscheduler/blob/3.x/apscheduler/schedulers/base.py#L384" target="_blank" rel="noreferrer">scheduler.add_job</a> 参数</td><td></td></tr></tbody></table><div class="danger custom-block"><p class="custom-block-title">注意<br></p><p>使用 kwargs 自定义定时任务时，不可使用参数 <code>func</code> 以及 <code>id</code>。</p></div><h3 id="自定义执行时机" tabindex="-1">自定义执行时机 <a class="header-anchor" href="#自定义执行时机" aria-label="Permalink to &quot;自定义执行时机&quot;">​</a></h3><p>使用 <code>scheduler.add_job</code> 参数定义任务，可以使任务的执行时机更加灵活。</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> PluginInstance</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">factory </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> BotHandlerFactory</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> apscheduler</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">triggers</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">cron </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> CronTrigger</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bot </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">PluginInstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">...</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 每个小时中的 5 分 30 秒时执行</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timed_task</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">trigger</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cron</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#BABED8;font-style:italic;">minute</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#BABED8;font-style:italic;">second</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">instance</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> BotHandlerFactory</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 每分钟的第 20 秒和 40 秒时执行</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timed_task</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">trigger</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">CronTrigger</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">20,40</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">instance</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> BotHandlerFactory</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span></code></pre></div><h2 id="取消定时任务" tabindex="-1">取消定时任务 <a class="header-anchor" href="#取消定时任务" aria-label="Permalink to &quot;取消定时任务&quot;">​</a></h2><p>为需要取消的定时任务传入 sub_tag 参数，可以重复，重复的 sub_tag 会被整合为一组。</p><h3 id="bot-remove-timed-task" tabindex="-1">bot.remove_timed_task() <a class="header-anchor" href="#bot-remove-timed-task" aria-label="Permalink to &quot;bot.remove_timed_task()&quot;">​</a></h3><p>按标签名取消定时任务</p><table><thead><tr><th>参数名</th><th>类型</th><th>释义</th><th>默认值</th></tr></thead><tbody><tr><td>sub_tag</td><td>str</td><td>需要取消的定时任务的子标签名</td><td></td></tr></tbody></table><p>示例：执行一次后取消任务</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> PluginInstance</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> amiyabot</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">factory </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> BotHandlerFactory</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">bot </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">PluginInstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">...</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">timed_task</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">each</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#BABED8;font-style:italic;">sub_tag</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">def</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">_</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">instance</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> BotHandlerFactory</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#BABED8;">    ...</span></span>
<span class="line"><span style="color:#BABED8;">    bot</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove_timed_task</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span></code></pre></div>`,23)]))}const d=a(o,[["render",p]]);export{i as __pageData,d as default};
